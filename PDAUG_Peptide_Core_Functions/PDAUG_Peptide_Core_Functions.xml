<tool id="pdaug_peptide_core_functions" name="PDAUG Peptide Core Functions" version="0.1.0">
  <description> Peptide sequence related core functions </description>

  <requirements>
    <requirement type="package" version="0.24.2">pandas</requirement>
    <requirement type="package" version="4.1.2">modlamp</requirement> 
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" />
  </stdio>
    <command detect_errors="exit_code"><![CDATA[


        python '$__tool_directory__/PDAUG_Peptide_Core_Functions.py'  '$SelCoreFunction.CoreFunction'

              --InFile '$InFile'

              #if $SelCoreFunction.CoreFunction == 'mutateAA'
                  --nr '$SelCoreFunction.nr'
                  --Prob '$SelCoreFunction.prob'
              #end if 

              #if $SelCoreFunction.CoreFunction == 'filteraa'
                  --FilterAA 'filterAA'
              #end if 

              #if $SelCoreFunction.CoreFunction == 'filterduplicates'
                  --FilterAA 'filterduplicates'
              #end if 

              #if $SelCoreFunction.CoreFunction == 'keepnaturalaa'
                  --FilterAA 'keepnaturalaa'
              #end if 

              --FastOut '$output1'

    ]]></command>

  <inputs>

    <param name="InFile" type="data" format="fasta" label="Input file" argument= "--InFile" help="Input fasta file with peptides"/>

    <conditional name='SelCoreFunction' >

        <param name="CoreFunction" type="select" label="Analysis options" argument="">
          <option value="mutateAA">Mutate Amino Acid</option>
          <option value="filterduplicates">Filter Duplicates Peptides</option>
          <option value="keepnaturalaa">Remove Peptides With Unatural Amino Acids</option>
          <option value="filteraa">Filter Peptides With Specific Amino Acid</option>
        </param>

        <when value="mutateAA">
            <param name="nr" type="integer" label="Number of mutations" value="3" argument="--nr" help="Number of mutations"/>
            <param name="prob" type="float" label="Probability" value="1.0" argument="--Prob"  help="Probability of mutating a sequence" />
        </when>

        <when value="filterduplicates">
        </when>

        <when value="keepnaturalaa">
        </when>

        <when value="filteraa">
            <param name="FilterAA" type="text" value="eisenberg" label="Filter AA" argument="--FilterAA" help="Amino acids to be filtered" />
        </when>

    </conditional>
  </inputs>

  <outputs>
        <data name='output1' format='fasta' label="${tool.name} on $on_string - ${SelCoreFunction.CoreFunction} (fasta)" />    
  </outputs>
  <tests>
    <test>
      <param name="InFile" value="test1.fasta"/>
      <param name="CoreFunction" value="mutateAA" />
      <param name="nr" value="3"/>
      <param name="prob" value="1.0"/>
      <output name="output1" file="out1.fasta" lines_diff="2"/>
    </test>
    <test>
      <param name="InFile" value="test2.fasta"/>
      <param name="CoreFunction" value="filterduplicates" />
      <output name="output1" file="out2.fasta" />
    </test>
    <test>
      <param name="InFile" value="test3.fasta"/>
      <param name="CoreFunction" value="keepnaturalaa" />
      <output name="output1" file="out3.fasta" />
    </test>
    <test>
      <param name="InFile" value="test4.fasta"/>
      <param name="CoreFunction" value="filteraa" />
      <param name="FilterAA" value="eisenberg" />
      <output name="output1" file="out4.fasta" />
    </test>
  </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

This tool performs some core functions on the peptide sequences and equipped with various options

  * **Mutate Amino Acid** Method to mutate with prob probability an nr of positions per sequence randomly.
  * **Filter Duplicates Peptides** Method to filter duplicates in the sequences from the class attribute sequences.
  * **Keep Naturalaa** Method to filter out sequences that do not contain natural amino acids. If the sequence contains a character.
  * **Filter Amino Acid** Method to filter out corresponding names and descriptor values of sequences with given amino acids in the argument list aminoacids.

-----

**Inputs**
    
    1 **Mutate Amino Acid**
        * **--InFile** takes Fasta file with peptide sequences.  
        * **--nr**  Number of mutations. 
        * **--probability** Probability of mutating a sequence.

    2 **Filter Duplicates Peptides***
        * **--InFile** takes Fasta file with peptide sequences. 

    3 **Remove Peptides With Unatural Amino Acids**
        * **--InFile** takes Fasta file with peptide sequences. 

    4 **Filter Peptides With Specific Amino Acid**
        * **--InFile** takes Fasta file with peptide sequences. 

-----

**Outputs**
    * Returns a fasta file.]]></help>

<citations>
  <citation type="bibtex">
    @misc{PDAUGGITHUB, 
      author = {Joshi, Jayadev  and Blankenberg, Daniel}, 
      year = {2020}, 
      title ={PDAUG - a Galaxy based toolset for peptide library analysis, visualization, and machine learning modeling}, 
      publisher = {GitHub}, 
      journal = {GitHub repository}, 
      url =
      {https://github.com/jaidevjoshi83/pdaug.git}, 
    }
</citation>

<citation type="bibtex">
    @article{müller_gabernet_hiss_schneider_2017, 
      title={modlAMP: Python for antimicrobial peptides}, 
      volume={33}, 
      DOI={10.1093/bioinformatics/btx285}, 
      number={17}, 
      journal={Bioinformatics}, 
      author={Müller, Alex T and Gabernet, Gisela and Hiss, Jan A and Schneider, Gisbert}, 
      year={2017}, 
      pages={2753–2755}
    }
  </citation>
    </citations>
</tool>