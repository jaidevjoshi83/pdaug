<tool id="pdaug_peptide_data_access" name="PDAUG Peptide Data Access" version="0.1.0">
  <description>Fetch peptide data from inbuild datasets and public databases</description>

  <requirements>
    <requirement type="package" version="0.24.2">pandas</requirement>
    <requirement type="package" version="4.1.2">modlamp</requirement> 
    <requirement type="package" version="8.0.21">mysql-connector-python</requirement>
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" />
  </stdio>
    <command detect_errors="exit_code"><![CDATA[

        python '$__tool_directory__/PDAUG_Peptide_Data_Access.py' -d '$SelectDatasets.DataBaseType' -o '$output1'

            #if $SelectDatasets.DataBaseType == "query_apd"
                -L '$SelectDatasets.list1'
            #end if

            #if $SelectDatasets.DataBaseType == "query_camp"
                -L '$SelectDatasets.list2'
            #end if            
                  
    ]]></command>


  <inputs>

    <conditional name="SelectDatasets">

      <param name="DataBaseType" type="select" label="Datasets"   argument="--DataBaseType" help="Name of the data set.">   
          <option value="AMPvsTMP" selected="true" > AMPvsTMP </option>
          <option value="AMPvsUniProt" > AMPvsUniProt </option>
          <option value="ACPvsTMP"> ACPvsTMP </option>
          <option value="ACPvsRandom"> ACPvsRandom </option>
          <option value="query_apd"> Query APD Database</option>
          <option value="query_camp" > Query CAMP Database </option>
      </param> 



       <when value="AMPvsTMP"/>
       <when value="AMPvsUniProt"/>
       <when value="ACPvsTMP"/>
       <when value="ACPvsRandom"/>
       <when value="query_apd">
          <param name="list1" type='text' argument="-List" label="List of integers as IDs" help="List of integers as IDs" />
       </when>

       <when value="query_camp">
          <param name="list2" type='text' argument="-List" label="List of integers as IDs" help="List of integers as IDs" />
        </when>

      </conditional>


  </inputs>

  <outputs>
        <data name='output1' format='tabular' label="${tool.name} $on_string - ${SelectDatasets.DataBaseType} (tabular)" />    
  </outputs>

  <tests>
    <test>
      <param name="DataBaseType" value="AMPvsTMP"/>
      <output name="output1" file="Out.tsv"/>
    </test>

  <!-- This test has consistently failed over several months, due to inability to access host/URL http://aps.unmc.edu/AP/database/query_output.php?ID=00004
    <test>
      <param name="DataBaseType" value="query_apd"/>
      <param name="list1" value="4,5,6" />
      <output name="output1" file="apd.tsv" lines_diff="8"/>
    </test>
  -->

    <test>
      <param name="DataBaseType" value="query_camp"/>
       <param name="list2" value="3,4,5,9" />
      <output name="output1" file="camp.tsv" lines_diff="10"/>
    </test>


  </tests>
  
    <help><![CDATA[
.. class:: infomark

**What it does**

This tool returns inbuild peptide data sets. 

  * **AMPvsTMP**  Antimicrobial peptides (AMP) consist of an intersection of all activity annotations of the APD2 and CAMP databases, where gram-positive, gram-negative, and antifungal exact matches were observed versus transmenbrane peptides (TMP) extracted from alpha-helical transmembrane regions of proteins for classification.
  * **AMPvsUniProt** AMP consisting of the whole APD3 versus UniProt peptides randomly extracted from the UniProt database, to be used for classification.
  * **ACPvsTMP**  Anticancer Peptide (ACP) sequences from the CancerPPD database  versus TM extracted from alpha-helical transmembrane regions of proteins for classification.
  * **ACPvsRandom** ACP sequences from the CancerPPD database versus Random peptides generated randomly with the amino acid composition of AMPs.
  * **query_apd** Retrive sequences from the antimicrobial peptide database APD.
  * **query_camp** Retrive sequences from the antimicrobial peptide database CAMP.

-----

**Inputs**
    * **--DataBaseType** Takes dataset name as input. 

-----

**Outputs**
    * Returns a tabular file with peptide sequences and class labels.]]></help>


<citations>
  <citation type="bibtex">
    @misc{PDAUGGITHUB, 
      author = {Joshi, Jayadev  and Blankenberg, Daniel}, 
      year = {2020}, 
      title ={PDAUG - a Galaxy based toolset for peptide library analysis, visualization, and machine learning modeling}, 
      publisher = {GitHub}, 
      journal = {GitHub repository}, 
      url =
      {https://github.com/jaidevjoshi83/pdaug.git}, 
    }
</citation>

<citation type="bibtex">
    @article{müller_gabernet_hiss_schneider_2017, 
      title={modlAMP: Python for antimicrobial peptides}, 
      volume={33}, 
      DOI={10.1093/bioinformatics/btx285}, 
      number={17}, 
      journal={Bioinformatics}, 
      author={Müller, Alex T and Gabernet, Gisela and Hiss, Jan A and Schneider, Gisbert}, 
      year={2017}, 
      pages={2753–2755}
    }
  </citation>
</citations>
</tool>



