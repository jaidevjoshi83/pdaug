<tool id="pdaug_sequence_based_peptide_generation" name="PDAUG Sequence Based Peptide Generation" version="0.1.0">
  <description>Generates peptide sequence library</description>

  <requirements>
    <requirement type="package" version="0.24.2">pandas</requirement>
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" />
  </stdio>
    <command detect_errors="exit_code"><![CDATA[


        python '$__tool_directory__/PDAUG_Sequence_Based_Peptide_Generation.py' '$SelMethod.Method'

                        --outputFile '$output1'

                        #if $SelMethod.Method == 'MutatedPeptides'
                          --sequence '$SelMethod.input1'
                          --mutation_site_list '$SelMethod.mutation_site_list'
                          --AA_list '$SelMethod.AA_list'
                        #end if 

                        #if $SelMethod.Method == 'RandomPeptides'
                          --AA_list '$SelMethod.AA_list'
                          --pep_length '$SelMethod.pep_length'
                          --out_pep_lenght '$SelMethod.out_pep_length'
                        #end if 

                        #if $SelMethod.Method == 'SlidingWindowPeptide'
                          --InFile '$SelMethod.input1'
                          --winSize '$SelMethod.WinSize'
                          --FragSize '$SelMethod.FragSize'
                        #end if     

    ]]></command>

  <inputs>
    <conditional name='SelMethod' >

        <param name="Method" type="select" label="Methods to generate peptides " argument="">
          <option value="MutatedPeptides">Mutated Peptides</option>
          <option value="RandomPeptides">Random Peptides</option>
          <option value="SlidingWindowPeptide">Sliding Window Peptide</option>
        </param>

        <when value="MutatedPeptides">
            <param name="input1" type="text" label="Peptide sequence" value="KLLKLLKKKLLK" argument= "--sequence" help="Peptide sequence"/>
            <param name="mutation_site_list" label="Mutation Site" value="2" type="text" argument="--mutation_site_list" help="List of integer to introduce mutation"/>
            <param name="AA_list" type="text" label="Amino Acide List"  value="I,H" argument="-AA_list" help="List of amino acids to be replaced"/>
        </when>

        <when value="RandomPeptides">
            <param name="AA_list" type="text" label="Amino Acide List" value="G,L,F,D,I,V,K" argument="-AA_list" help="List of amino acids" />
            <param name="pep_length" type="integer" optional="false" label="Peptide Legnth" value="7" argument="--pep_length" help="Length of output peptide"/>
            <param name="out_pep_length" type="integer" optional="false" label="Nomber of peptides" value="7" argument="--out_pep_length" help="Number of peptides to be generated"/>
        </when>

        <when value="SlidingWindowPeptide">
            <param name="input1" type="data" label="Input Sequence" format="fasta" argument= "--InFile" help="Input protein sequence"/>
            <param name="WinSize" type="integer" label="Window Size"  value="3" argument="--winSize" help="Sliding window size" />
            <param name="FragSize" type="integer" label="Fragment Size"  value="7" argument="--FragSize" help="Size of the peptides" />
        </when>
    </conditional>
  </inputs>

  <outputs>
        <data name='output1' format='fasta' label="${tool.name} on $on_string - ${SelMethod.Method} (fasta)" />    
  </outputs>
  <tests>
    <test>
      <param name='Method' value="MutatedPeptides" />
      <param name='input1' value="KLLKLLKKKLLK" />
      <param name='mutation_site_list' value="2" />
      <param name='AA_list' value="G,Y" />
      <output name="output1" file="out1.fasta" />
    </test>

    <test>
      <param name='Method' value="RandomPeptides" />
      <param name='AA_list' value="G,L,F,D,I,V,K," />
      <param name='pep_length' value="7" />
      <param name='out_pep_length' value="7" />
      <output name="output1" file="out2.fasta" lines_diff='28'/>
    </test>

    <test>
      <param name='Method' value="SlidingWindowPeptide" />
      <param name='input1' value="test1.fasta" />
      <param name='WinSize' value="3" />
      <param name='FragSize' value="7" />
      <output name="output1" file="out3.fasta" />
    </test>
  </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

This tool generates peptide sequences based on three sequences based properties which includes Mutated Peptides, Random Peptides, and Sliding Window Peptide.

-----

**Inputs**
    **1**  MutatedPeptides    
       * **--sequence**  Input peptide sequence 
       * **--mutation_site_list** Sites to mutated AA as Integer values 
       * **--AA_list** List of amino acids to replace
       
    **2** RandomPeptides
       * **--AA_list** List of amino acids
       * **--pep_length** Length of peptide sequences 
       * **--out_pep_lenght** Number of output peptides

    **3** SlidingWindowPeptide
       * **--InFile** Input protein sequences fasta file 
       * **--winSize** Sliding window size 
       * **--FragSize** Output Peptide sequence size

-----

**Outputs**
    * **--outputFile** Returns fasta files with peptide sequences. ]]></help>
<citations>
  <citation type="bibtex">
    @misc{PDAUGGITHUB, 
      author = {Joshi, Jayadev  and Blankenberg, Daniel}, 
      year = {2020}, 
      title ={PDAUG - a Galaxy based toolset for peptide library analysis, visualization, and machine learning modeling}, 
      publisher = {GitHub}, 
      journal = {GitHub repository}, 
      url =
      {https://github.com/jaidevjoshi83/pdaug.git}, 
      }
</citation>

</citations>
</tool>



